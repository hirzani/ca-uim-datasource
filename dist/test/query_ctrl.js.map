{"version":3,"sources":["../../src/query_ctrl.js"],"names":["GenericDatasourceQueryCtrl","$scope","$injector","scope","target","metric","source","legend","type","query","datasource","metricFindQuery","metricFindMetric","metricFindTarget","metricFindLegend","rawQuery","panelCtrl","refresh","QueryCtrl","templateUrl"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;IAEaA,0B,WAAAA,0B;;;AAEX,sCAAYC,MAAZ,EAAoBC,SAApB,EAAgC;AAAA;;AAAA,wJACxBD,MADwB,EAChBC,SADgB;;AAG9B,UAAKC,KAAL,GAAaF,MAAb;AACA,UAAKG,MAAL,CAAYC,MAAZ,GAAqB,MAAKD,MAAL,CAAYC,MAAZ,IAAsB,eAA3C;AACA,UAAKD,MAAL,CAAYE,MAAZ,GAAqB,MAAKF,MAAL,CAAYE,MAAZ,IAAsB,eAA3C;AACA,UAAKF,MAAL,CAAYA,MAAZ,GAAqB,MAAKA,MAAL,CAAYA,MAAZ,IAAsB,eAA3C;AACA,UAAKA,MAAL,CAAYG,MAAZ,GAAqB,MAAKH,MAAL,CAAYG,MAAZ,IAAsB,eAA3C;AACA,UAAKH,MAAL,CAAYI,IAAZ,GAAmB,MAAKJ,MAAL,CAAYI,IAAZ,IAAoB,WAAvC;AAR8B;AAS/B;;;;+BAEUC,K,EAAO;AAChB,aAAO,KAAKC,UAAL,CAAgBC,eAAhB,CAAgCF,SAAS,EAAzC,CAAP;AACD;;;qCAEgBA,K,EAAO;AACtBA,cAAQA,QAAM,GAAN,GAAU,KAAKL,MAAL,CAAYE,MAAtB,GAA6B,GAA7B,GAAiC,KAAKF,MAAL,CAAYA,MAArD;AACA,aAAO,KAAKM,UAAL,CAAgBE,gBAAhB,CAAiCH,SAAS,EAA1C,CAAP;AACD;;;qCAEgBA,K,EAAO;AACtBA,cAAQ,KAAKL,MAAL,CAAYC,MAAZ,GAAmB,GAAnB,GAAuBI,KAAvB,GAA6B,GAA7B,GAAiC,KAAKL,MAAL,CAAYA,MAA7C,GAAoD,GAApD,GAAwD,KAAKA,MAAL,CAAYG,MAA5E;AACA,aAAO,KAAKG,UAAL,CAAgBE,gBAAhB,CAAiCH,SAAS,EAA1C,CAAP;AACD;;;qCAEgBA,K,EAAO;AACtBA,cAAQ,KAAKL,MAAL,CAAYC,MAAZ,GAAmB,GAAnB,GAAuB,KAAKD,MAAL,CAAYE,MAAnC,GAA0C,GAA1C,GAA8CG,KAA9C,GAAoD,GAApD,GAAwD,KAAKL,MAAL,CAAYG,MAA5E;AACA,aAAO,KAAKG,UAAL,CAAgBG,gBAAhB,CAAiCJ,SAAS,EAA1C,CAAP;AACD;;;qCACgBA,K,EAAO;AACtBA,cAAQ,KAAKL,MAAL,CAAYC,MAAZ,GAAmB,GAAnB,GAAuB,KAAKD,MAAL,CAAYE,MAAnC,GAA0C,GAA1C,GAA8C,KAAKF,MAAL,CAAYA,MAA1D,GAAiE,GAAjE,GAAqEK,KAA7E;AACA,aAAO,KAAKC,UAAL,CAAgBI,gBAAhB,CAAiCL,SAAS,EAA1C,CAAP;AACD;;;uCAEkB;AACjB,WAAKL,MAAL,CAAYW,QAAZ,GAAuB,CAAC,KAAKX,MAAL,CAAYW,QAApC;AACD;;;uCAEkB;AACjB,WAAKC,SAAL,CAAeC,OAAf,GADiB,CACS;AAC3B;;;;EA1C6CC,c;;AA6ChDlB,2BAA2BmB,WAA3B,GAAyC,4BAAzC","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.target.metric = this.target.metric || 'select metric';\n    this.target.source = this.target.source || 'select source';\n    this.target.target = this.target.target || 'select target';\n    this.target.legend = this.target.legend || 'select legend';\n    this.target.type = this.target.type || 'timeserie';\n  }\n\n  getOptions(query) {\n    return this.datasource.metricFindQuery(query || '');\n  }\n\n  getOptionsMetric(query) {\n    query = query+'|'+this.target.source+'|'+this.target.target;\n    return this.datasource.metricFindMetric(query || '');\n  }\n\n  getOptionsSource(query) {\n    query = this.target.metric+'|'+query+'|'+this.target.target+\"|\"+this.target.legend;\n    return this.datasource.metricFindMetric(query || '');\n  }\n\n  getOptionsTarget(query) {\n    query = this.target.metric+'|'+this.target.source+'|'+query+\"|\"+this.target.legend;\n    return this.datasource.metricFindTarget(query || '');\n  }\n  getOptionsLegend(query) {\n    query = this.target.metric+'|'+this.target.source+'|'+this.target.target+'|'+query;\n    return this.datasource.metricFindLegend(query || '');\n  }\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}
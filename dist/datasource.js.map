{"version":3,"sources":["../src/datasource.js"],"names":["GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","withCredentials","headers","basicAuth","length","options","query","buildQueryParameters","qos","targets","target","split","source","legend","timerangeFrom","Date","setMilliseconds","range","from","timerangeTo","to","filter","t","hide","when","data","getAdhocFilters","adhocFilters","doRequest","toISOString","method","then","parseUIMResult","result","console","log","config","_","map","d","i","text","value","isObject","timeAndValueList","sample","d2","j","timeAndValue","epochtime","datapoints","reverse","response","status","message","title","replace","annotation","annotationQuery","datasource","enable","iconColor","rangeRaw","interpolated","mapToTextValue","parseMetricList","qosList","for_configuration_item","qosName","JSON","stringify","e","a","indexOf","parse","parseTargetList","push","legendType","datasourceRequest","metric","scopedVars","refId","Promise","resolve","reject"],"mappings":";;;;;;;;;AAAA;;;;;;;;IAEaA,iB,WAAAA,iB;AAEX,6BAAYC,gBAAZ,EAA8BC,EAA9B,EAAkCC,UAAlC,EAA8CC,WAA9C,EAA2D;AAAA;;AACzD,SAAKC,IAAL,GAAYJ,iBAAiBI,IAA7B;AACA,SAAKC,GAAL,GAAWL,iBAAiBK,GAA5B;AACA,SAAKC,IAAL,GAAYN,iBAAiBM,IAA7B;AACA,SAAKC,CAAL,GAASN,EAAT;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKK,eAAL,GAAuBR,iBAAiBQ,eAAxC;AACA,SAAKC,OAAL,GAAe,EAAC,gBAAgB,kBAAjB,EAAf;AACA,QAAI,OAAOT,iBAAiBU,SAAxB,KAAsC,QAAtC,IAAkDV,iBAAiBU,SAAjB,CAA2BC,MAA3B,GAAoC,CAA1F,EAA6F;AAC3F,WAAKF,OAAL,CAAa,eAAb,IAAgCT,iBAAiBU,SAAjD;AACD;AACF;;;;0BAEKE,O,EAAS;AACb,UAAIC,QAAQ,KAAKC,oBAAL,CAA0BF,OAA1B,CAAZ;;AAEA,UAAIG,MAAMF,MAAMG,OAAN,CAAc,CAAd,EAAiBC,MAAjB,CAAwBC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAAV;AACA,UAAIC,SAASN,MAAMG,OAAN,CAAc,CAAd,EAAiBC,MAAjB,CAAwBC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAAb;AACA,UAAID,SAASJ,MAAMG,OAAN,CAAc,CAAd,EAAiBC,MAAjB,CAAwBC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAAb;AACA,UAAIE,SAASP,MAAMG,OAAN,CAAc,CAAd,EAAiBC,MAAjB,CAAwBC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAAb;;AAEA,UAAIG,gBAAgB,IAAIC,IAAJ,CAAS,CAAT,CAApB,CARa,CAQoB;AACjCD,oBAAcE,eAAd,CAA8BV,MAAMW,KAAN,CAAYC,IAA1C;AACA,UAAIC,cAAc,IAAIJ,IAAJ,CAAS,CAAT,CAAlB;AACAI,kBAAYH,eAAZ,CAA4BV,MAAMW,KAAN,CAAYG,EAAxC;;AAGAd,YAAMG,OAAN,GAAgBH,MAAMG,OAAN,CAAcY,MAAd,CAAqB;AAAA,eAAK,CAACC,EAAEC,IAAR;AAAA,OAArB,CAAhB;;AAEA,UAAIjB,MAAMG,OAAN,CAAcL,MAAd,IAAwB,CAA5B,EAA+B;AAC7B,eAAO,KAAKJ,CAAL,CAAOwB,IAAP,CAAY,EAACC,MAAM,EAAP,EAAZ,CAAP;AACD;;AAED,UAAI,KAAK7B,WAAL,CAAiB8B,eAArB,EAAsC;AACpCpB,cAAMqB,YAAN,GAAqB,KAAK/B,WAAL,CAAiB8B,eAAjB,CAAiC,KAAK3B,IAAtC,CAArB;AACD,OAFD,MAEO;AACLO,cAAMqB,YAAN,GAAqB,EAArB;AACD;;AAED,UAAIjB,UAAQ,eAAZ,EAA6B;AAC3B;AACAA,iBAAO,EAAP;AACD,OAHD,MAGM,IAAIA,UAAQ,UAAZ,EAAwB;AAC5B;AACAA,iBAAOE,MAAP;AACD;;AAED,aAAO,KAAKgB,SAAL,CAAe;AACpB9B,aAAK,KAAKA,GAAL,GAAW,gDAAX,GAA4Dc,MAA5D,GAAmE,kDAAnE,GAAsHJ,GAAtH,GAA0H,UAA1H,GAAqIE,MAArI,GAA4I,UAA5I,GAAuJI,cAAce,WAAd,EAAvJ,GAAmL,GAAnL,GAAuLV,YAAYU,WAAZ,EAAvL,GAAiN,mBADlM;AAEpBJ,cAAMnB,KAFc;AAGpBwB,gBAAQ;AAHY,OAAf,EAIJC,IAJI,CAIC,KAAKC,cAJN,CAAP;AAKD;;;mCAEcC,M,EAAQ;AACrBC,cAAQC,GAAR,CAAY,YAAZ,EAA0BF,MAA1B;AACA,UAAIpB,SAASoB,OAAOG,MAAP,CAAcX,IAAd,CAAmBhB,OAAnB,CAA2B,CAA3B,EAA8BC,MAA9B,CAAqCC,KAArC,CAA2C,GAA3C,EAAgD,CAAhD,CAAb;AACA,UAAIc,OAAQY,iBAAEC,GAAF,CAAML,OAAOR,IAAb,EAAmB,UAACc,CAAD,EAAIC,CAAJ,EAAU;AACvC,YAAID,KAAKA,EAAEE,IAAP,IAAeF,EAAEG,KAArB,EAA4B;AAC1B,iBAAO,EAAED,MAAMF,EAAEE,IAAV,EAAgBC,OAAOH,EAAEG,KAAzB,EAAP;AACD,SAFD,MAEO,IAAIL,iBAAEM,QAAF,CAAWJ,CAAX,CAAJ,EAAmB;AACxB,cAAIK,mBAAoBP,iBAAEC,GAAF,CAAMC,EAAEM,MAAR,EAAgB,UAACC,EAAD,EAAKC,CAAL,EAAW;AACjD,gBAAIC,eAAe,CAACF,GAAGJ,KAAJ,EAAUI,GAAGG,SAAH,GAAa,IAAvB,CAAnB;AACA,mBAAOD,YAAP;AACD,WAHuB,CAAxB;AAIA,cAAInC,UAAQ,QAAZ,EAAsB;AACpB,mBAAO,EAAEH,QAAQ6B,EAAE3B,MAAZ,EAAoBsC,YAAYN,iBAAiBO,OAAjB,EAAhC,EAAP;AACD,WAFD,MAEM,IAAItC,UAAQ,QAAZ,EAAsB;AAC1B,mBAAO,EAAEH,QAAQ6B,EAAE7B,MAAZ,EAAoBwC,YAAYN,iBAAiBO,OAAjB,EAAhC,EAAP;AACD,WAFK,MAEA;AACJ,mBAAO,EAAEzC,QAAQ6B,EAAE3B,MAAF,GAAS,GAAT,GAAa2B,EAAE7B,MAAzB,EAAiCwC,YAAYN,iBAAiBO,OAAjB,EAA7C,EAAP;AACD;AAEF;AACD,eAAO,EAAEV,MAAMF,CAAR,EAAWG,OAAOH,CAAlB,EAAP;AACD,OAlBW,CAAZ;AAmBAL,cAAQC,GAAR,CAAY,YAAZ,EAA0B,EAACV,MAAMA,IAAP,EAA1B;AACA,aAAO,EAACA,MAAMA,IAAP,EAAP;AACD;;;qCAEgB;AACf,aAAO,KAAKG,SAAL,CAAe;AACpB9B,aAAK,KAAKA,GAAL,GAAW,GADI;AAEpBgC,gBAAQ;AAFY,OAAf,EAGJC,IAHI,CAGC,oBAAY;AAClB,YAAIqB,SAASC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,iBAAO,EAAEA,QAAQ,SAAV,EAAqBC,SAAS,wBAA9B,EAAwDC,OAAO,SAA/D,EAAP;AACD;AACF,OAPM,CAAP;AAQD;;;oCAEelD,O,EAAS;AACvB,UAAIC,QAAQ,KAAKV,WAAL,CAAiB4D,OAAjB,CAAyBnD,QAAQoD,UAAR,CAAmBnD,KAA5C,EAAmD,EAAnD,EAAuD,MAAvD,CAAZ;AACA,UAAIoD,kBAAkB;AACpBzC,eAAOZ,QAAQY,KADK;AAEpBwC,oBAAY;AACV1D,gBAAMM,QAAQoD,UAAR,CAAmB1D,IADf;AAEV4D,sBAAYtD,QAAQoD,UAAR,CAAmBE,UAFrB;AAGVC,kBAAQvD,QAAQoD,UAAR,CAAmBG,MAHjB;AAIVC,qBAAWxD,QAAQoD,UAAR,CAAmBI,SAJpB;AAKVvD,iBAAOA;AALG,SAFQ;AASpBwD,kBAAUzD,QAAQyD;AATE,OAAtB;;AAYA,aAAO,KAAKlC,SAAL,CAAe;AACpB9B,aAAK,KAAKA,GAAL,GAAW,cADI;AAEpBgC,gBAAQ,MAFY;AAGpBL,cAAMiC;AAHc,OAAf,EAIJ3B,IAJI,CAIC,kBAAU;AAChB,eAAOE,OAAOR,IAAd;AACD,OANM,CAAP;AAOD;;;oCAEenB,K,EAAO;AACrB,UAAIyD,eAAe;AACfrD,gBAAQ,KAAKd,WAAL,CAAiB4D,OAAjB,CAAyBlD,KAAzB,EAAgC,IAAhC,EAAsC,OAAtC;AADO,OAAnB;;AAIA,aAAO,KAAKsB,SAAL,CAAe;AACpB9B,aAAK,KAAKA,GAAL,GAAW,SADI;AAEpB2B,cAAMsC,YAFc;AAGpBjC,gBAAQ;AAHY,OAAf,EAIJC,IAJI,CAIC,KAAKiC,cAJN,CAAP;AAKD;;;qCAEgB1D,K,EAAO;AACtB,UAAIM,SAASN,MAAMK,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAb;AACA,UAAIoD,eAAe;AACfrD,gBAAQ,KAAKd,WAAL,CAAiB4D,OAAjB,CAAyBlD,KAAzB,EAAgC,IAAhC,EAAsC,OAAtC;AADO,OAAnB;;AAIA,aAAO,KAAKsB,SAAL,CAAe;AACpB9B,aAAK,KAAKA,GAAL,GAAW,gDAAX,GAA4Dc,MAA5D,GAAmE,kCADpD;AAEpBa,cAAMsC,YAFc;AAGpBjC,gBAAQ;AAHY,OAAf,EAIJC,IAJI,CAIC,KAAKkC,eAJN,CAAP;AAKD;;;oCAEehC,M,EAAQ;AACtB,UAAIiC,UAAU7B,iBAAEC,GAAF,CAAML,OAAOR,IAAb,EAAmB,UAACc,CAAD,EAAIC,CAAJ,EAAU;AACzC,YAAID,KAAKA,EAAEE,IAAP,IAAeF,EAAEG,KAArB,EAA4B;AAC1B,iBAAO,EAAED,MAAMF,EAAEE,IAAV,EAAgBC,OAAOH,EAAEG,KAAzB,EAAP;AACD,SAFD,MAEO,IAAIL,iBAAEM,QAAF,CAAWJ,CAAX,CAAJ,EAAmB;AACxB,iBAAO,EAAEE,MAAMF,EAAE4B,sBAAF,CAAyBC,OAAjC,EAA0C1B,OAAOH,EAAE4B,sBAAF,CAAyBC,OAA1E,EAAP;AACD;AACD,eAAO,EAAE3B,MAAMF,CAAR,EAAWG,OAAOH,CAAlB,EAAP;AACD,OAPa,CAAd;AAQA,aAAO2B,QAAQ5B,GAAR,CAAY+B,KAAKC,SAAjB,EAA4BnB,OAA5B,GAAsC9B,MAAtC,CAA6C,UAAUkD,CAAV,EAAa/B,CAAb,EAAgBgC,CAAhB,EAAmB;AAC3D,eAAOA,EAAEC,OAAF,CAAUF,CAAV,EAAa/B,IAAE,CAAf,MAAsB,CAAC,CAA9B;AACH,OAFF,EAEIW,OAFJ,GAEcb,GAFd,CAEkB+B,KAAKK,KAFvB,CAAP;AAID;;;qCAEgBpE,K,EAAO;AACtB,UAAIM,SAASN,MAAMK,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAb;AACA,UAAIH,MAAMF,MAAMK,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAV;AACA,UAAIoD,eAAe;AACfrD,gBAAQ,KAAKd,WAAL,CAAiB4D,OAAjB,CAAyBlD,KAAzB,EAAgC,IAAhC,EAAsC,OAAtC;AADO,OAAnB;;AAIA,aAAO,KAAKsB,SAAL,CAAe;AACpB9B,aAAK,KAAKA,GAAL,GAAW,gDAAX,GAA4Dc,MAA5D,GAAmE,kDAAnE,GAAsHJ,GAAtH,GAA0H,iCAD3G;AAEpBiB,cAAMsC,YAFc;AAGpBjC,gBAAQ;AAHY,OAAf,EAIJC,IAJI,CAIC,KAAK4C,eAJN,CAAP;AAKD;;;oCAEe1C,M,EAAQ;;AAEtB,UAAIiC,UAAU7B,iBAAEC,GAAF,CAAML,OAAOR,IAAb,EAAmB,UAACc,CAAD,EAAIC,CAAJ,EAAU;AACzC,YAAID,KAAKA,EAAEE,IAAP,IAAeF,EAAEG,KAArB,EAA4B;AAC1B,iBAAO,EAAED,MAAMF,EAAE7B,MAAV,EAAkBgC,OAAOH,EAAE7B,MAA3B,EAAP;AACD,SAFD,MAEO,IAAI2B,iBAAEM,QAAF,CAAWJ,CAAX,CAAJ,EAAmB;AACxB,iBAAO,EAAEE,MAAMF,EAAE7B,MAAV,EAAkBgC,OAAOH,EAAE7B,MAA3B,EAAP;AACD;AACD,eAAO,EAAE+B,MAAMF,CAAR,EAAWG,OAAOH,CAAlB,EAAP;AACD,OAPa,CAAd;AAQA2B,cAAQU,IAAR,CAAa,EAACnC,MAAM,eAAP,EAAwBC,OAAO,eAA/B,EAAb;AACAwB,cAAQU,IAAR,CAAa,EAACnC,MAAM,UAAP,EAAmBC,OAAO,UAA1B,EAAb;AACA,aAAOwB,QAAQ5B,GAAR,CAAY+B,KAAKC,SAAjB,EAA4BnB,OAA5B,GAAsC9B,MAAtC,CAA6C,UAAUkD,CAAV,EAAa/B,CAAb,EAAgBgC,CAAhB,EAAmB;AAC3D,eAAOA,EAAEC,OAAF,CAAUF,CAAV,EAAa/B,IAAE,CAAf,MAAsB,CAAC,CAA9B;AACH,OAFF,EAEIW,OAFJ,GAEcb,GAFd,CAEkB+B,KAAKK,KAFvB,CAAP;AAID;;;qCAEgBpE,K,EAAO;AACtB,UAAIuE,aAAa,CACd,EAACpC,MAAM,QAAP,EAAiBC,OAAO,QAAxB,EADc,EAEd,EAACD,MAAM,QAAP,EAAiBC,OAAO,QAAxB,EAFc,EAGd,EAACD,MAAM,eAAP,EAAwBC,OAAO,eAA/B,EAHc,CAAjB;AAKA,aAAOmC,UAAP;AACD;;;mCAEc5C,M,EAAQ;AACrB,aAAOI,iBAAEC,GAAF,CAAML,OAAOR,IAAb,EAAmB,UAACc,CAAD,EAAIC,CAAJ,EAAU;AAClC,YAAID,KAAKA,EAAEE,IAAP,IAAeF,EAAEG,KAArB,EAA4B;AAC1B,iBAAO,EAAED,MAAMF,EAAEE,IAAV,EAAgBC,OAAOH,EAAEG,KAAzB,EAAP;AACD,SAFD,MAEO,IAAIL,iBAAEM,QAAF,CAAWJ,CAAX,CAAJ,EAAmB;AACxB,iBAAO,EAAEE,MAAMF,CAAR,EAAWG,OAAOF,CAAlB,EAAP;AACD;AACD,eAAO,EAAEC,MAAMF,CAAR,EAAWG,OAAOH,CAAlB,EAAP;AACD,OAPM,CAAP;AAQD;;;8BAESlC,O,EAAS;AACjBA,cAAQJ,eAAR,GAA0B,KAAKA,eAA/B;AACAI,cAAQH,OAAR,GAAkB,KAAKA,OAAvB;;AAEA,aAAO,KAAKP,UAAL,CAAgBmF,iBAAhB,CAAkCzE,OAAlC,CAAP;AACD;;;yCAEoBA,O,EAAS;AAAA;;AAC5B;AACAA,cAAQI,OAAR,GAAkB4B,iBAAEhB,MAAF,CAAShB,QAAQI,OAAjB,EAA0B,kBAAU;AACpD,eAAOC,OAAOA,MAAP,KAAkB,eAAzB;AACD,OAFiB,CAAlB;;AAIA,UAAID,UAAU4B,iBAAEC,GAAF,CAAMjC,QAAQI,OAAd,EAAuB,kBAAU;AAC7C,eAAO;AACLC,kBAAQ,MAAKd,WAAL,CAAiB4D,OAAjB,CAAyB9C,OAAOqE,MAAP,GAAc,GAAd,GAAkBrE,OAAOE,MAAzB,GAAgC,GAAhC,GAAoCF,OAAOA,MAA3C,GAAkD,GAAlD,GAAsDA,OAAOG,MAAtF,EAA8FR,QAAQ2E,UAAtG,EAAkH,OAAlH,CADH;AAELC,iBAAOvE,OAAOuE,KAFT;AAGL1D,gBAAMb,OAAOa,IAHR;AAIL1B,gBAAMa,OAAOb,IAAP,IAAe;AAJhB,SAAP;AAMD,OAPa,CAAd;;AASAQ,cAAQI,OAAR,GAAkBA,OAAlB;;AAEA,aAAOJ,OAAP;AACD;;;+BAEUA,O,EAAS;AAAA;;AAClB,aAAO,IAAI6E,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,eAAKxD,SAAL,CAAe;AACb9B,eAAK,OAAKA,GAAL,GAAW,WADH;AAEbgC,kBAAQ,MAFK;AAGbL,gBAAMpB;AAHO,SAAf,EAIG0B,IAJH,CAIQ,kBAAU;AAChB,iBAAOoD,QAAQlD,OAAOR,IAAf,CAAP;AACD,SAND;AAOD,OARM,CAAP;AASD;;;iCAEYpB,O,EAAS;AAAA;;AACpB,aAAO,IAAI6E,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,eAAKxD,SAAL,CAAe;AACb9B,eAAK,OAAKA,GAAL,GAAW,aADH;AAEbgC,kBAAQ,MAFK;AAGbL,gBAAMpB;AAHO,SAAf,EAIG0B,IAJH,CAIQ,kBAAU;AAChB,iBAAOoD,QAAQlD,OAAOR,IAAf,CAAP;AACD,SAND;AAOD,OARM,CAAP;AASD","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.headers = {'Content-Type': 'application/json'};\n    if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n      this.headers['Authorization'] = instanceSettings.basicAuth;\n    }\n  }\n\n  query(options) {\n    var query = this.buildQueryParameters(options);\n\n    var qos = query.targets[0].target.split(\"|\")[0]\n    var source = query.targets[0].target.split(\"|\")[1]\n    var target = query.targets[0].target.split(\"|\")[2]\n    var legend = query.targets[0].target.split(\"|\")[3]\n\n    var timerangeFrom = new Date(0); // The 0 there is the key, which sets the date to the epoch\n    timerangeFrom.setMilliseconds(query.range.from);\n    var timerangeTo = new Date(0);\n    timerangeTo.setMilliseconds(query.range.to);\n\n\n    query.targets = query.targets.filter(t => !t.hide);\n\n    if (query.targets.length <= 0) {\n      return this.q.when({data: []});\n    }\n\n    if (this.templateSrv.getAdhocFilters) {\n      query.adhocFilters = this.templateSrv.getAdhocFilters(this.name);\n    } else {\n      query.adhocFilters = [];\n    }\n\n    if (target==\"--alltarget--\") {\n      //if all target is selected. remove filter\n      target=\"\"\n    }else if (target==\"[source]\") {\n      //if target name is the same like source\n      target=source\n    }\n\n    return this.doRequest({\n      url: this.url + '/uimapi/metrics?id_lookup=by_metric_source&id='+source+'&metric_type_lookup=by_metric_name&metricFilter='+qos+'&target='+target+'&period='+timerangeFrom.toISOString()+'|'+timerangeTo.toISOString()+'&showSamples=true',\n      data: query,\n      method: 'GET'\n    }).then(this.parseUIMResult);\n  }\n\n  parseUIMResult(result) {\n    console.log(\"result: %o\", result)\n    var legend = result.config.data.targets[0].target.split(\"|\")[3]\n    var data =  _.map(result.data, (d, i) => {\n      if (d && d.text && d.value) {\n        return { text: d.text, value: d.value };\n      } else if (_.isObject(d)) {\n        var timeAndValueList =  _.map(d.sample, (d2, j) => {\n          var timeAndValue = [d2.value,d2.epochtime*1000]\n          return timeAndValue\n        })\n        if (legend==\"source\") {\n          return { target: d.source, datapoints: timeAndValueList.reverse() };\n        }else if (legend==\"target\") {\n          return { target: d.target, datapoints: timeAndValueList.reverse() };\n        }else {\n          return { target: d.source+' '+d.target, datapoints: timeAndValueList.reverse() };\n        }\n\n      }\n      return { text: d, value: d };\n    });\n    console.log(\"result: %o\", {data: data})\n    return {data: data}\n  }\n\n  testDatasource() {\n    return this.doRequest({\n      url: this.url + '/',\n      method: 'GET',\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  annotationQuery(options) {\n    var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n    var annotationQuery = {\n      range: options.range,\n      annotation: {\n        name: options.annotation.name,\n        datasource: options.annotation.datasource,\n        enable: options.annotation.enable,\n        iconColor: options.annotation.iconColor,\n        query: query\n      },\n      rangeRaw: options.rangeRaw\n    };\n\n    return this.doRequest({\n      url: this.url + '/annotations',\n      method: 'POST',\n      data: annotationQuery\n    }).then(result => {\n      return result.data;\n    });\n  }\n\n  metricFindQuery(query) {\n    var interpolated = {\n        target: this.templateSrv.replace(query, null, 'regex')\n    };\n\n    return this.doRequest({\n      url: this.url + '/search',\n      data: interpolated,\n      method: 'POST',\n    }).then(this.mapToTextValue);\n  }\n\n  metricFindMetric(query) {\n    var source = query.split(\"|\")[1]\n    var interpolated = {\n        target: this.templateSrv.replace(query, null, 'regex')\n    };\n\n    return this.doRequest({\n      url: this.url + '/uimapi/metrics?id_lookup=by_metric_source&id='+source+'&period=latest&showSamples=false',\n      data: interpolated,\n      method: 'GET',\n    }).then(this.parseMetricList);\n  }\n\n  parseMetricList(result) {\n    var qosList = _.map(result.data, (d, i) => {\n      if (d && d.text && d.value) {\n        return { text: d.text, value: d.value };\n      } else if (_.isObject(d)) {\n        return { text: d.for_configuration_item.qosName, value: d.for_configuration_item.qosName};\n      }\n      return { text: d, value: d };\n    });\n    return qosList.map(JSON.stringify).reverse().filter(function (e, i, a) {\n                return a.indexOf(e, i+1) === -1;\n            }).reverse().map(JSON.parse)\n\n  }\n\n  metricFindTarget(query) {\n    var source = query.split(\"|\")[1]\n    var qos = query.split(\"|\")[0]\n    var interpolated = {\n        target: this.templateSrv.replace(query, null, 'regex')\n    };\n\n    return this.doRequest({\n      url: this.url + '/uimapi/metrics?id_lookup=by_metric_source&id='+source+'&metric_type_lookup=by_metric_name&metricFilter='+qos+'&period=latest&showSamples=true',\n      data: interpolated,\n      method: 'GET',\n    }).then(this.parseTargetList);\n  }\n\n  parseTargetList(result) {\n\n    var qosList = _.map(result.data, (d, i) => {\n      if (d && d.text && d.value) {\n        return { text: d.target, value: d.target };\n      } else if (_.isObject(d)) {\n        return { text: d.target, value: d.target};\n      }\n      return { text: d, value: d };\n    });\n    qosList.push({text: \"--alltarget--\", value: \"--alltarget--\"})\n    qosList.push({text: \"[source]\", value: \"[source]\"})\n    return qosList.map(JSON.stringify).reverse().filter(function (e, i, a) {\n                return a.indexOf(e, i+1) === -1;\n            }).reverse().map(JSON.parse)\n\n  }\n\n  metricFindLegend(query) {\n    var legendType = [\n       {text: \"source\", value: \"source\"},\n       {text: \"target\", value: \"target\"},\n       {text: \"source+target\", value: \"source+target\"},\n    ];\n    return legendType\n  }\n\n  mapToTextValue(result) {\n    return _.map(result.data, (d, i) => {\n      if (d && d.text && d.value) {\n        return { text: d.text, value: d.value };\n      } else if (_.isObject(d)) {\n        return { text: d, value: i};\n      }\n      return { text: d, value: d };\n    });\n  }\n\n  doRequest(options) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  buildQueryParameters(options) {\n    //remove placeholder targets\n    options.targets = _.filter(options.targets, target => {\n      return target.target !== 'select metric';\n    });\n\n    var targets = _.map(options.targets, target => {\n      return {\n        target: this.templateSrv.replace(target.metric+\"|\"+target.source+\"|\"+target.target+\"|\"+target.legend, options.scopedVars, 'regex'),\n        refId: target.refId,\n        hide: target.hide,\n        type: target.type || 'timeserie'\n      };\n    });\n\n    options.targets = targets;\n\n    return options;\n  }\n\n  getTagKeys(options) {\n    return new Promise((resolve, reject) => {\n      this.doRequest({\n        url: this.url + '/tag-keys',\n        method: 'POST',\n        data: options\n      }).then(result => {\n        return resolve(result.data);\n      });\n    });\n  }\n\n  getTagValues(options) {\n    return new Promise((resolve, reject) => {\n      this.doRequest({\n        url: this.url + '/tag-values',\n        method: 'POST',\n        data: options\n      }).then(result => {\n        return resolve(result.data);\n      });\n    });\n  }\n\n}\n"]}